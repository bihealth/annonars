/*
 * PanelApp API
 *
 * PanelApp API
 *
 * OpenAPI spec version: v1
 * Contact: panelapp@genomicsengland.co.uk
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, serde::Serialize, serde::Deserialize)]
pub struct PanelType {
    #[serde(rename = "name")]
    name: String,
    #[serde(rename = "slug")]
    slug: Option<String>,
    #[serde(rename = "description")]
    description: String,
}

impl PanelType {
    pub fn new(name: String, description: String) -> PanelType {
        PanelType {
            name,
            slug: None,
            description,
        }
    }

    pub fn set_name(&mut self, name: String) {
        self.name = name;
    }

    pub fn with_name(mut self, name: String) -> PanelType {
        self.name = name;
        self
    }

    pub fn name(&self) -> &String {
        &self.name
    }

    pub fn set_slug(&mut self, slug: String) {
        self.slug = Some(slug);
    }

    pub fn with_slug(mut self, slug: String) -> PanelType {
        self.slug = Some(slug);
        self
    }

    pub fn slug(&self) -> Option<&String> {
        self.slug.as_ref()
    }

    pub fn reset_slug(&mut self) {
        self.slug = None;
    }

    pub fn set_description(&mut self, description: String) {
        self.description = description;
    }

    pub fn with_description(mut self, description: String) -> PanelType {
        self.description = description;
        self
    }

    pub fn description(&self) -> &String {
        &self.description
    }
}
