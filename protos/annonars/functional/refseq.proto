// Protocolbuffers definition for RefSeq functional elements.

syntax = "proto3";

package annonars.functional.refseq;

// Enumeration for `gbkey` field.
enum Category {
    // Miscaellaneous feature.
    CATEGORY_MISC_FEATURE = 0;
    // Miscaellaneous recombination feature.
    CATEGORY_MISC_RECOMB = 1;
    // Miscaellaneous structure.
    CATEGORY_MISC_STRUCTURE = 2;
    // Mobile element.
    CATEGORY_MOBILE_ELEMENT = 3;
    // Protein binding annotation.
    CATEGORY_PROTEIN_BIND = 4;
    // Region.
    CATEGORY_REGION = 5;
    // Regulatory element.
    CATEGORY_REGULATORY = 6;
    // Repeat region
    CATEGORY_REPEAT_REGION = 7;
    // Replication origin.
    CATEGORY_REP_ORIGIN = 8;
}

// Enumeration for `regulatory_class` field.
enum RegulatoryClass {
    // CCAAT signal.
    REGULATORY_CLASS_CAAT_SIGNAL = 0;
    // DNase I hypersensitive site.
    REGULATORY_CLASS_DNASE_I_HYPERSENSITIVE_SITE = 1;
    // Enhancer.
    REGULATORY_CLASS_ENHANCER = 2;
    // Enhancer blocking element.
    REGULATORY_CLASS_ENHANCER_BLOCKING_ELEMENT = 3;
    // Epigenetically modified region.
    REGULATORY_CLASS_EPIGENETICALLY_MODIFIED_REGION = 4;
    // GC signal.
    REGULATORY_CLASS_GC_SIGNAL = 5;
    // Imprinting control region.
    REGULATORY_CLASS_IMPRINTING_CONTROL_REGION = 6;
    // Insulator.
    REGULATORY_CLASS_INSULATOR = 7;
    // Locus control region.
    REGULATORY_CLASS_LOCUS_CONTROL_REGION = 8;
    // Matrix attachment region.
    REGULATORY_CLASS_MATRIX_ATTACHMENT_REGION = 9;
    // Micrococcal nuclease hypersensitive site.
    REGULATORY_CLASS_MICROCOCCAL_NUCLEASE_HYPERSENSITIVE_SITE = 10;
    // Promoter.
    REGULATORY_CLASS_PROMOTER = 11;
    // Replication regulatory region.
    REGULATORY_CLASS_REPLICATION_REGULATORY_REGION = 12;
    // Response element.
    REGULATORY_CLASS_RESPONSE_ELEMENT = 13;
    // Silencer.
    REGULATORY_CLASS_SILENCER = 14;
    // TATA box.
    REGULATORY_CLASS_TATA_BOX = 15;
    // Transcriptional cis regulatory region.
    REGULATORY_CLASS_TRANSCRIPTIONAL_CIS_REGULATORY_REGION = 16;
}

// Message for storing a RefSeq regulatory element.
message Record {
    // Chromosome
    string chromosome = 1;
    // Start position (1-based)
    int32 start = 2;
    // Stop position (1-based)
    int32 stop = 3;

    // ID
    string id = 4;
    // Dbxref
    string dbxref = 5;

    // Category of record.
    Category category = 6;
    // Regulatory class of record.
    optional RegulatoryClass regulatory_class = 7;
    // note
    optional string note = 8;
    // experiment
    optional string experiment = 9;
    // function
    optional string function = 10;
}

// Message for storing multiple Gbxref IDs.
message DbxrefList {
    // Dbxref IDs.
    repeated string dbxref = 1;
}
